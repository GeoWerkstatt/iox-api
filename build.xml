<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="bindist" name="iox-api">

  <!-- set global properties for this build -->
  <property name="src" value="${basedir}/src"/>
  <property name="build" value="${basedir}/build"/>
  <property name="dist" value="${basedir}/dist"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <property name="projectjar" value="${build}/jar/${ant.project.name}.jar"/>
    <property name="versionfile" value="${src}/ch/interlis/iox/Version.properties"/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/jar"/>
    <mkdir dir="${dist}"/>
  </target>

  <target depends="init" name="compile">
    <!-- Compile the java code from ${src} into ${build}/classes -->
    <mkdir dir="${build}/classes"/>
    <javac destdir="${build}/classes" includes="**/*.java" excludes="**/bak~/*.java"  source="1.4" target="1.4">
      <!-- <classpath>
        <pathelement location="lib/ili2c.jar"/>
      </classpath> -->
    	<src path="${src}" />
    	<!-- <src path="${build}/src"/> -->
    </javac>
  </target>


  <target depends="init" name="javadocs">
    <mkdir dir="${build}/javadoc"/>
    <javadoc Public="true" Windowtitle="${ant.project.name}" destdir="${build}/javadoc" packagenames="ch.interlis.*">
    	<sourcepath path="${src}"/>
    </javadoc>
  </target>


  <target depends="init,compile" name="jar">
    <!-- <propertyfile file="${versionfile}">
	<entry  key="versionDate" type="date" value="now" pattern="yyyyMMdd"/>
    </propertyfile> -->

    <delete file="${projectjar}" quiet="true"/>

    <jar jarfile="${projectjar}" manifest="other/manifest">
	<fileset dir="${build}/classes" excludes="**/Test.class" includes="**/*.class"/>
	<!-- <fileset dir="${basedir}/src-hd53/classes" excludes="**/Test.class" includes="**/*.class"/> -->
    	<fileset dir="${src}" includes="**/*.properties"/>
    	<fileset dir="${src}" includes="**/*.gif"/>
        <!-- <zipfileset src="lib/stax-api-1.0.jar"/> -->
    </jar>
  </target>

  
  <target depends="init" name="buildnr">
    <property file="${versionfile}" prefix="buildnr."/>
    <property name="buildnr" value="${buildnr.versionMajor}.${buildnr.versionMinor}.${buildnr.versionMicro}"/>
    <!-- <property name="buildnr" value="${DSTAMP}"/> -->
  </target>

  <target depends="init,buildnr" name="bindist">
	<delete file="${dist}/${ant.project.name}-${buildnr}.zip" quiet="true"/>
    <zip zipfile="${dist}/${ant.project.name}-${buildnr}.zip">
    	<zipfileset dir="." includes="build/jar/${ant.project.name}.jar" fullpath="${ant.project.name}-${buildnr}/${ant.project.name}.jar"/>
    	<zipfileset dir="." prefix="${ant.project.name}-${buildnr}">
   		<patternset includes="doc/CHANGES.txt"/>
		<patternset includes="doc/README.txt"/>
	</zipfileset>
    	<zipfileset dir="build/javadoc" prefix="${ant.project.name}-${buildnr}/doc/api">
   		<patternset includes="**/*"/>
	</zipfileset>
    	<zipfileset dir="doc" prefix="${ant.project.name}-${buildnr}">
   		<patternset includes="LICENSE.*"/>
	</zipfileset>
    </zip>
  </target>

  <target depends="init,buildnr" name="srcdist">
    <delete file="${dist}/${ant.project.name}-${buildnr}.src.zip" quiet="true"/>
    <zip zipfile="${dist}/${ant.project.name}-${buildnr}.src.zip">
    	<zipfileset dir="." prefix="${ant.project.name}-${buildnr}">
	    	<patternset includes="src/**" excludes="**/CVS/*;**/bak~/*"/>
	    	<patternset includes="build.xml"/>
	    	<patternset includes="other/manifest"/>
	    	<patternset includes="lib/**"/>
	    	<patternset includes="doc/**"/>
	    	<patternset includes="model/**"/>
    	</zipfileset>
    </zip>
  </target>

  <target name="clean">
    <delete dir="${build}"/>
  </target>

    <target depends="init" name="reszip">
	<delete file="${dist}/resources-${buildnr}.zip" quiet="true"/>
    <zip zipfile="${dist}/resources-${buildnr}.zip">
    	<zipfileset dir="resources">
	    	<!-- <patternset includes="**/comments.txt"/> -->
	    	<patternset includes="**/*.properties"/>
    	</zipfileset>
    </zip>
  </target>

  <target depends="init" name="copyresfr">

    <copy toDir="${basedir}/resources/fr">
    	<mapper type="glob" from="*.properties" to="*_fr.properties"/>
    	<fileset dir="${src}" includes="**/*.properties"/>
    </copy>
  </target>

  <target depends="init" name="cleanres">

    <delete>
    	<fileset dir="${build}/classes" includes="**/*.properties"/>
    	<fileset dir="${build}/classes" includes="**/*.gif"/>
    	<fileset dir="${build}/classes" includes="**/*.jpg"/>
    </delete>
  </target>

  <target depends="init" name="saveres">
    <mkdir dir="res-${DSTAMP}"/>

    <copy toDir="res-${DSTAMP}">
    	<fileset dir="${src}" includes="**/*.properties"/>
    	<fileset dir="${src}" includes="**/*.gif"/>
    	<fileset dir="${src}" includes="**/*.jpg"/>
    </copy>
  </target>

</project>
